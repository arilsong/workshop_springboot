name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  testing-job:
    name: Tests
    runs-on: [self-hosted, linux, x64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: mavem excutavel
        run: chmod +x ./mvnw

      - name: Run tests
        run: ./mvnw test

  linting-job:
    name: Code Quality
    runs-on: [self-hosted, linux, x64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: mavem excutavel
        run: chmod +x ./mvnw

      - name: Checkagem do codigo
        run: ./mvnw checkstyle:check

  build-job:
    name: Build Docker Image
    runs-on: [self-hosted, linux, x64]
    needs: [ testing-job, linting-job ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: mavem excutavel
        run: chmod +x ./mvnw

      - name: Build JAR
        run: ./mvnw clean package -DskipTests

      - name: Build Docker image
        run: |
          docker build \
            --tag my-app:${{ github.sha }} \
            --tag my-app:latest \
            .

      - name: Save Docker image
        run: docker save my-app:latest -o app.tar

      - name: Upload Docker image
        uses: actions/upload-artifact@v4
        with:
          name: app-image
          path: app.tar

  run-built-image-job:
    name: Test Docker Image
    runs-on: [self-hosted, linux, x64]
    needs: build-job

    steps:
      - name: Download Docker image
        uses: actions/download-artifact@v4
        with:
          name: app-image

      - name: Load Docker image
        run: docker load -i app.tar

      - name: Stop existing test container
        run: |
          docker stop my-running-app || true
          docker rm my-running-app || true

      - name: Run Docker container
        run: |
          docker run -d -p 8080:8080 --name my-running-app my-app:latest

      - name: Test application
        run: |
          sleep 10
          curl -f http://localhost:8080/

      - name: Stop test container
        run: |
          docker stop my-running-app || true
          docker rm my-running-app || true

  deploy-job:
    name: Deploy Application
    runs-on: [self-hosted, linux, x64]
    needs: run-built-image-job
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Download Docker image
        uses: actions/download-artifact@v4
        with:
          name: app-image

      - name: Load Docker image
        run: docker load -i app.tar

      - name: Stop existing container
        run: |
          docker stop my-app || true
          docker rm my-app || true

      - name: Deploy new version
        run: |
          docker run -d \
            -p 8080:8080 \
            --name my-app \
            --restart unless-stopped \
            my-app:latest

      - name: Verify deployment
        run: |
          sleep 15
          curl -f http://localhost:8080/ || exit 1
          echo "Deploy realizado com sucesso!"